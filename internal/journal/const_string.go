// Code generated by "stringer -output const_string.go -type=Facility,Priority"; DO NOT EDIT.

package journal

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[kern-0]
	_ = x[user-1]
	_ = x[mail-2]
	_ = x[daemon-3]
	_ = x[auth-4]
	_ = x[syslog-5]
	_ = x[lpr-6]
	_ = x[news-7]
	_ = x[uucp-8]
	_ = x[cron-9]
	_ = x[authpriv-10]
	_ = x[ftp-11]
	_ = x[local0-16]
	_ = x[local1-17]
	_ = x[local2-18]
	_ = x[local3-19]
	_ = x[local4-20]
	_ = x[local5-21]
	_ = x[local6-22]
	_ = x[local7-23]
}

const (
	_Facility_name_0 = "kernusermaildaemonauthsysloglprnewsuucpcronauthprivftp"
	_Facility_name_1 = "local0local1local2local3local4local5local6local7"
)

var (
	_Facility_index_0 = [...]uint8{0, 4, 8, 12, 18, 22, 28, 31, 35, 39, 43, 51, 54}
	_Facility_index_1 = [...]uint8{0, 6, 12, 18, 24, 30, 36, 42, 48}
)

func (i Facility) String() string {
	switch {
	case 0 <= i && i <= 11:
		return _Facility_name_0[_Facility_index_0[i]:_Facility_index_0[i+1]]
	case 16 <= i && i <= 23:
		i -= 16
		return _Facility_name_1[_Facility_index_1[i]:_Facility_index_1[i+1]]
	default:
		return "Facility(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[emerga-0]
	_ = x[alert-1]
	_ = x[crit-2]
	_ = x[err-3]
	_ = x[warning-4]
	_ = x[notice-5]
	_ = x[info-6]
	_ = x[debug-7]
}

const _Priority_name = "emergaalertcriterrwarningnoticeinfodebug"

var _Priority_index = [...]uint8{0, 6, 11, 15, 18, 25, 31, 35, 40}

func (i Priority) String() string {
	if i < 0 || i >= Priority(len(_Priority_index)-1) {
		return "Priority(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Priority_name[_Priority_index[i]:_Priority_index[i+1]]
}
